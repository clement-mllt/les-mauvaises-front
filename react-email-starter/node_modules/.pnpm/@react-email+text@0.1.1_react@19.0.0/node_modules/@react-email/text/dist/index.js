"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  Text: () => Text
});
module.exports = __toCommonJS(src_exports);

// src/text.tsx
var React = __toESM(require("react"));

// src/utils/parse-margins.ts
function parseMargin({
  margin,
  marginTop,
  marginRight,
  marginBottom,
  marginLeft
}) {
  let mt = marginTop;
  let mr = marginRight;
  let mb = marginBottom;
  let ml = marginLeft;
  if (typeof margin === "number") {
    mt = margin;
    mr = margin;
    mb = margin;
    ml = margin;
  } else if (typeof margin === "string") {
    const values = margin.split(/\s+/);
    switch (values.length) {
      case 1:
        mt = values[0];
        mr = values[0];
        mb = values[0];
        ml = values[0];
        break;
      case 2:
        mt = values[0];
        mb = values[0];
        mr = values[1];
        ml = values[1];
        break;
      case 3:
        mt = values[0];
        mr = values[1];
        mb = values[2];
        ml = values[1];
        break;
      case 4:
        mt = values[0];
        mr = values[1];
        mb = values[2];
        ml = values[3];
        break;
      default:
        break;
    }
  }
  return { mt, mr, mb, ml };
}

// src/text.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var Text = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { style } = _b, props = __objRest(_b, ["style"]);
    var _a2, _b2;
    const margins = parseMargin({
      margin: style == null ? void 0 : style.margin,
      marginBottom: (_a2 = style == null ? void 0 : style.marginBottom) != null ? _a2 : "16px",
      marginTop: (_b2 = style == null ? void 0 : style.marginTop) != null ? _b2 : "16px",
      marginLeft: style == null ? void 0 : style.marginLeft,
      marginRight: style == null ? void 0 : style.marginRight
    });
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      "p",
      __spreadProps(__spreadValues({}, props), {
        ref,
        style: __spreadProps(__spreadValues({
          fontSize: "14px",
          lineHeight: "24px"
        }, style), {
          marginBottom: margins.mb,
          marginTop: margins.mt,
          marginLeft: margins.ml,
          marginRight: margins.mr
        })
      })
    );
  }
);
Text.displayName = "Text";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Text
});
